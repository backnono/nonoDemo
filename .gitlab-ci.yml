stages:
  - lint
  - test

golang-lint:
  image: 172.2.2.11:5000/lmi/golangci-lint
  stage: lint
  script:
    - go env -w CGO_ENABLED="0"
    - go env -w GOPROXY=https://goproxy.cn,direct
    - go mod tidy
    - golangci-lint run ./...
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: true

test-unit:
  image: 172.2.2.11:5000/lmi/golang:1.18
  stage: test
  script:
    - echo "=========start test ========="
    - go env -w GOPROXY="https://goproxy.cn,direct"
    - go install github.com/boumenot/gocover-cobertura@latest
    - go install github.com/jstemmer/go-junit-report/v2@latest
    - go install github.com/axw/gocov/gocov@latest
    - go test ./... -coverprofile=coverage.txt -covermode=atomic -v 2>&1 |  go-junit-report -set-exit-code > report.xml
    - gocover-cobertura < coverage.txt > coverage.xml
    - gocov convert coverage.txt | gocov report
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit:
        - report.xml
  coverage: '/Total Coverage: \d+\.\d+/'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'